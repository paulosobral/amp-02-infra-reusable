name: "Terraform Validate Feature Branch Pipeline"

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Install Terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg &&
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list &&
          sudo apt update && sudo apt install terraform
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Terraform init
        run: |
          cd ${{ github.workspace }}/infra && terraform init
      - name: Terraform validate
        run: terraform validate
      - name: Terraform plan
        run: cd ${{ github.workspace }}/infra && terraform plan
      # - name: Pull-request branch to main
      #   uses: repo-sync/pull-request@v2
      #   with:
      #     destination_branch: "${{ inputs.PR_DESTINATION_BRANCH}}"
      #     pr_title: "Pulling ${{ github.ref }} into ${{ inputs.PR_DESTINATION_BRANCH}}" 
      #     pr_body: |                                        
      #       :crown: *An automated PR*

      #       _Created by [repo-sync/pull-request](https://github.com/repo-sync/pull-request)_
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Generate version
        id: generate_version
        run: |
          npx semantic-release --dry-run --no-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get new version
        id: new_version
        run: echo "::set-output name=version::$(jq -r '.nextRelease.version' <.releaserc)"

      - name: Open Pull Request
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ steps.new_version.outputs.version }}';
            const { data: pullRequest } = await github.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${version}`,
              head: `release-${version}`,
              base: 'main',
              body: `This PR introduces version ${version}.`,
              draft: false
            });
            console.log(`Created Pull Request #${pullRequest.number}`);