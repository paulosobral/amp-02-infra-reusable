name: "Terraform Apply or Destroy Branch Main"

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
jobs:
  terraform-apply-destroy:
    runs-on: ubuntu-latest
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
    steps:
      - name: Install Terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg &&
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list &&
          sudo apt update && sudo apt install terraform
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Terraform init
        run: |
          cd ${{ github.workspace }}/infra && terraform init
      - name: Terraform validate
        run: terraform validate
      - name: Terraform plan
        run: cd ${{ github.workspace }}/infra && terraform plan
      
      - name: Check Terraform apply or Terraform destroy
        run: |
          if grep 'destroy: true' ${{ github.workspace }}/infra/destroy.yml ; then
            echo "DESTROY=true" >> $GITHUB_ENV
            cd ${{ github.workspace }}/infra && terraform destroy --auto-approve
          else
            echo "DESTROY=false" >> $GITHUB_ENV
            cd ${{ github.workspace }}/infra && terraform apply --auto-approve
          fi

      - name: Conditional Step for destroy == false to test resources in cloud
        if: env.DESTROY == 'false'
        run: echo "This step runs only if DESTROY is true"


